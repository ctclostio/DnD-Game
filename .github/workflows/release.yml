name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build Backend
        run: |
          cd backend
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ../dist/dnd-game-linux-amd64 ./cmd/server
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ../dist/dnd-game-darwin-amd64 ./cmd/server
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ../dist/dnd-game-windows-amd64.exe ./cmd/server

      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build
          tar -czf ../dist/frontend-build.tar.gz build/

      - name: Generate Changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, using initial commit"
            PREV_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          # Generate changelog
          echo "## What's Changed" > changelog.md
          echo "" >> changelog.md
          
          # Get commit messages
          git log --pretty=format:"* %s by @%an" ${PREV_TAG}..HEAD >> changelog.md
          
          echo "" >> changelog.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${{ github.ref_name }}" >> changelog.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: changelog.md
          files: |
            dist/dnd-game-linux-amd64
            dist/dnd-game-darwin-amd64
            dist/dnd-game-windows-amd64.exe
            dist/frontend-build.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-release:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: secrets.DOCKER_USERNAME != ''

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ctclostio/dnd-game-backend
            ctclostio/dnd-game-frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: ${{ secrets.DOCKER_USERNAME != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: ${{ secrets.DOCKER_USERNAME != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max