apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: dnd-game
  labels:
    app.kubernetes.io/name: dnd-game
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: dnd-game
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dnd-game
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: dnd-game-frontend
      automountServiceAccountToken: false
      containers:
      - name: frontend
        image: dnd-frontend:1.0.0 # TODO: Update version as needed
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_URL
          valueFrom:
            configMapKeyRef:
              name: dnd-game-config
              key: REACT_APP_API_URL
        - name: REACT_APP_WS_URL
          valueFrom:
            configMapKeyRef:
              name: dnd-game-config
              key: REACT_APP_WS_URL
        - name: REACT_APP_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: dnd-game-config
              key: REACT_APP_ENVIRONMENT
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
            ephemeral-storage: "200Mi"
          limits:
            memory: "256Mi"
            cpu: "500m"
            ephemeral-storage: "500Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: cache
          mountPath: /var/cache/nginx
        - name: run
          mountPath: /var/run
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: cache
        emptyDir: {}
      - name: run
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: dnd-game
  labels:
    app.kubernetes.io/name: dnd-game
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: dnd-game
    app.kubernetes.io/component: frontend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: dnd-game
  labels:
    app.kubernetes.io/name: dnd-game
    app.kubernetes.io/component: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: dnd-game
  labels:
    app.kubernetes.io/name: dnd-game
    app.kubernetes.io/component: frontend
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dnd-game
      app.kubernetes.io/component: frontend